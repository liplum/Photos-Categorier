<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddingClassifyFolder" xml:space="preserve">
    <value>添加一个新的需分类文件夹</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="CannotOpen" xml:space="preserve">
    <value>无法打开文件，可能因为文件已损坏或格式不支持</value>
  </data>
  <data name="ConfirmDeletion" xml:space="preserve">
    <value>是否删除？</value>
  </data>
  <data name="DeleteThis" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>目标文件夹不存在或已失效</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="FileHasOccupied" xml:space="preserve">
    <value>文件被占用</value>
  </data>
  <data name="FileHasOccupiedOrHasDeleted" xml:space="preserve">
    <value>文件被占用或不存在</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>文件夹</value>
  </data>
  <data name="Formats" xml:space="preserve">
    <value>支持的格式</value>
  </data>
  <data name="HasNoPhoto" xml:space="preserve">
    <value>已经没有图片了！</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>帮助</value>
  </data>
  <data name="HelpA1" xml:space="preserve">
    <value>使用 ←/A 把图片移动到左边的相册中</value>
  </data>
  <data name="HelpA2" xml:space="preserve">
    <value>使用 →/D 把图片移动到右边的相册中</value>
  </data>
  <data name="HelpA3" xml:space="preserve">
    <value>使用 ↓/S 删除这张图片</value>
  </data>
  <data name="HelpA4" xml:space="preserve">
    <value>使用 ↑/W 跳过这张</value>
  </data>
  <data name="HelpB1" xml:space="preserve">
    <value>右上角为剩余的图片计数</value>
  </data>
  <data name="HelpB2" xml:space="preserve">
    <value>左/右下角标签点击后可打开相应的文件夹</value>
  </data>
  <data name="HelpInfo" xml:space="preserve">
    <value>帮助信息</value>
  </data>
  <data name="IsLastPhoto" xml:space="preserve">
    <value>这是最后一张了哦</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左箭头</value>
  </data>
  <data name="NotHoldPhoto" xml:space="preserve">
    <value>所选文件夹内没有图片或格式不支持！</value>
  </data>
  <data name="NotPointLeft" xml:space="preserve">
    <value>未设定左箭头指向的相册！</value>
  </data>
  <data name="NotPointRight" xml:space="preserve">
    <value>未设定右箭头指向的相册！</value>
  </data>
  <data name="NotSetClassifyFolder" xml:space="preserve">
    <value>未设定需分类的相册！</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右箭头</value>
  </data>
  <data name="SelectLeftFolder" xml:space="preserve">
    <value>设置左键头指向的相册</value>
  </data>
  <data name="SelectRightFolder" xml:space="preserve">
    <value>设置右箭头指向的相册</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="SettingClassifyFolder" xml:space="preserve">
    <value>设置需分类的相册</value>
  </data>
  <data name="SettingWindowSize" xml:space="preserve">
    <value>调整窗口大小</value>
  </data>
  <data name="SkipThis" xml:space="preserve">
    <value>跳过</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>技术支持</value>
  </data>
  <data name="SupportedFormats" xml:space="preserve">
    <value>支持的格式: *.jpg *.png *.gif *.jpeg</value>
  </data>
  <data name="Tip" xml:space="preserve">
    <value>提示</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>图片分类器</value>
  </data>
  <data name="ToLeft" xml:space="preserve">
    <value>置左</value>
  </data>
  <data name="ToRight" xml:space="preserve">
    <value>置右</value>
  </data>
  <data name="UnauthorizedAccess" xml:space="preserve">
    <value>无法操作，可能因为没有权限访问或文件为只读</value>
  </data>
  <data name="VersionInfo" xml:space="preserve">
    <value>版本信息</value>
  </data>
  <data name="Warnning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="WindowSize" xml:space="preserve">
    <value>窗口大小</value>
  </data>
</root>